{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","handleInputChange2","e","setState","search","target","value","handleInputChange","event","i","state","data","length","name","x","view","age","salary","columns","Header","accessor","bind","this","className","type","placeholder","onChange","onClick","defaultPageSize","pageSizeOptions","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mUA2LeA,G,kBAlLb,aAAe,IAAD,8BACZ,+CAuFFC,mBAAqB,SAAAC,GACnB,EAAKC,SAAS,CAAEC,OAAQF,EAAEG,OAAOC,SAzFrB,EA4FdC,kBAAoB,SAAAC,GAClB,IAAK,IAAIC,EAAI,EAAGA,EAAI,EAAKC,MAAMC,KAAKC,OAAQH,IAAK,CAC/C,GAAI,EAAKC,MAAMC,KAAKF,GAAGI,OAAS,EAAKH,MAAMN,OAAQ,CACjD,EAAKD,SAAS,CACZW,GAAG,EACHC,KAAM,CACJ,CACEF,KAAM,EAAKH,MAAMC,KAAKF,GAAGI,KACzBG,IAAK,EAAKN,MAAMC,KAAKF,GAAGO,IACxBC,OAAQ,EAAKP,MAAMC,KAAKF,GAAGQ,WAIjC,MAGA,EAAKP,MAAMC,KAAKF,GAAGI,OAAS,EAAKH,MAAMN,SACtB,IAAjB,EAAKM,MAAMI,GAEX,EAAKX,SAAS,CACZY,KAAM,CACJ,CACEF,KAAM,iBACNG,IAAK,GACLC,OAAQ,OAMlB,EAAKd,SAAS,CAAEW,GAAG,KAxHnB,EAAKJ,MAAQ,CACXN,OAAQ,GACRU,GAAG,EACHH,KAAM,CACJ,CACEE,KAAM,SACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,UACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,QACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,SACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,YACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,SACNG,IAAK,GACLC,OAAQ,MAIZF,KAAM,CACJ,CACEF,KAAM,SACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,UACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,QACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,SACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,YACNG,IAAK,GACLC,OAAQ,KAEV,CACEJ,KAAM,SACNG,IAAK,GACLC,OAAQ,MAGZC,QAAS,CACP,CACEC,OAAQ,OACRC,SAAU,QAEZ,CACED,OAAQ,MACRC,SAAU,OAEZ,CACED,OAAQ,SACRC,SAAU,YAIhB,EAAKb,kBAAoB,EAAKA,kBAAkBc,KAAvB,gBArFb,E,sEA8HZ,MAA0B,KAAtBC,KAAKZ,MAAMN,OAEX,6BACE,wBAAImB,UAAU,4BAAd,eACA,2BACEC,KAAK,OACLC,YAAY,WACZC,SAAUJ,KAAKrB,qBAEjB,4BACEuB,KAAK,SACLD,UAAU,cACVI,QAASL,KAAKf,mBAEd,uBAAGgB,UAAU,kBAEf,kBAAC,IAAD,CACEZ,KAAMW,KAAKZ,MAAMC,KACjBO,QAASI,KAAKZ,MAAMQ,QACpBU,gBAAiB,EACjBC,gBAAiB,CAAC,EAAG,EAAG,MAKN,KAAtBP,KAAKZ,MAAMN,OAEX,6BACE,wBAAImB,UAAU,4BAAd,eACA,2BACEC,KAAK,OACLC,YAAY,WACZC,SAAUJ,KAAKrB,qBAEjB,4BACEuB,KAAK,SACLD,UAAU,cACVI,QAASL,KAAKf,mBAEd,uBAAGgB,UAAU,kBAEf,kBAAC,IAAD,CACEZ,KAAMW,KAAKZ,MAAMK,KACjBG,QAASI,KAAKZ,MAAMQ,QACpBU,gBAAiB,EACjBC,gBAAiB,CAAC,EAAG,EAAG,WApBhC,M,GAxJcC,cCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4cebd57f.chunk.js","sourcesContent":["import React,{Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      search: \"\",\n      x: true,\n      data: [\n        {\n          name: \"Suresh\",\n          age: 26,\n          salary: 60000\n        },\n        {\n          name: \"Santosh\",\n          age: 22,\n          salary: 30000\n        },\n        {\n          name: \"Sagar\",\n          age: 40,\n          salary: 40000\n        },\n        {\n          name: \"Subham\",\n          age: 30,\n          salary: 50000\n        },\n        {\n          name: \"Goverdhan\",\n          age: 32,\n          salary: 50000\n        },\n        {\n          name: \"Suchit\",\n          age: 37,\n          salary: 60000\n        }\n      ],\n\n      view: [\n        {\n          name: \"Suresh\",\n          age: 26,\n          salary: 20000\n        },\n        {\n          name: \"Santosh\",\n          age: 22,\n          salary: 30000\n        },\n        {\n          name: \"Sagar\",\n          age: 40,\n          salary: 40000\n        },\n        {\n          name: \"Subham\",\n          age: 30,\n          salary: 50000\n        },\n        {\n          name: \"Goverdhan\",\n          age: 32,\n          salary: 50000\n        },\n        {\n          name: \"Suchit\",\n          age: 37,\n          salary: 60000\n        }\n      ],\n      columns: [\n        {\n          Header: \"Name\",\n          accessor: \"name\"\n        },\n        {\n          Header: \"Age\",\n          accessor: \"age\"\n        },\n        {\n          Header: \"Salary\",\n          accessor: \"salary\"\n        }\n      ]\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  handleInputChange2 = e => {\n    this.setState({ search: e.target.value });\n  };\n\n  handleInputChange = event => {\n    for (var i = 0; i < this.state.data.length; i++) {\n      if (this.state.data[i].name === this.state.search) {\n        this.setState({\n          x: false,\n          view: [\n            {\n              name: this.state.data[i].name,\n              age: this.state.data[i].age,\n              salary: this.state.data[i].salary\n            }\n          ]\n        });\n        break;\n      }\n      if (\n        this.state.data[i].name !== this.state.search &&\n        this.state.x === true\n      ) {\n        this.setState({\n          view: [\n            {\n              name: \"Name Not Found\",\n              age: \"\",\n              salary: \"\"\n            }\n          ]\n        });\n      }\n    }\n    this.setState({ x: true });\n  };\n\n  render() {\n    if (this.state.search === \"\") {\n      return (\n        <div>\n          <h3 className=\"text-primary text-center\">React Table</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Search..\"\n            onChange={this.handleInputChange2}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn-primary\"\n            onClick={this.handleInputChange}\n          >\n            <i className=\"fa fa-search\" />\n          </button>\n          <ReactTable\n            data={this.state.data}\n            columns={this.state.columns}\n            defaultPageSize={2}\n            pageSizeOptions={[2, 4, 6]}\n          />\n        </div>\n      );\n    }\n    if (this.state.search !== \"\") {\n      return (\n        <div>\n          <h3 className=\"text-primary text-center\">React Table</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Search..\"\n            onChange={this.handleInputChange2}\n          />\n          <button\n            type=\"submit\"\n            className=\"btn-primary\"\n            onClick={this.handleInputChange}\n          >\n            <i className=\"fa fa-search\" />\n          </button>\n          <ReactTable\n            data={this.state.view}\n            columns={this.state.columns}\n            defaultPageSize={2}\n            pageSizeOptions={[2, 4, 6]}\n          />\n        </div>\n      );\n    }\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}